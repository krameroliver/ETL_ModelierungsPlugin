/*
 * generated by Xtext 2.22.0
 */
package org.etl_modeling.jobdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class JobDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SchedulePackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.SchedulePackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSchedulePackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSchedulePackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cProcessingPointKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cProcessingpointAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cProcessingpointProcessingPointParserRuleCall_3_2_0 = (RuleCall)cProcessingpointAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Keyword cJobsKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cJobsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cJobsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cJobsJobParserRuleCall_4_2_0 = (RuleCall)cJobsAssignment_4_2.eContents().get(0);
		private final Assignment cJobsAssignment_4_3 = (Assignment)cGroup_4.eContents().get(3);
		private final RuleCall cJobsJobParserRuleCall_4_3_0 = (RuleCall)cJobsAssignment_4_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		
		//SchedulePackage:
		//	{SchedulePackage}
		//	'SchedulePackage'
		//	name=EString ('ProcessingPoint' '{' processingpoint=ProcessingPoint '}'
		//	'################################## Jobs #################################') ('Jobs' '{' jobs+=Job jobs+=Job* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//{SchedulePackage} 'SchedulePackage' name=EString ('ProcessingPoint' '{' processingpoint=ProcessingPoint '}'
		//'################################## Jobs #################################') ('Jobs' '{' jobs+=Job jobs+=Job* '}')?
		public Group getGroup() { return cGroup; }
		
		//{SchedulePackage}
		public Action getSchedulePackageAction_0() { return cSchedulePackageAction_0; }
		
		//'SchedulePackage'
		public Keyword getSchedulePackageKeyword_1() { return cSchedulePackageKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//('ProcessingPoint' '{' processingpoint=ProcessingPoint '}'
		//'################################## Jobs #################################')
		public Group getGroup_3() { return cGroup_3; }
		
		//'ProcessingPoint'
		public Keyword getProcessingPointKeyword_3_0() { return cProcessingPointKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//processingpoint=ProcessingPoint
		public Assignment getProcessingpointAssignment_3_2() { return cProcessingpointAssignment_3_2; }
		
		//ProcessingPoint
		public RuleCall getProcessingpointProcessingPointParserRuleCall_3_2_0() { return cProcessingpointProcessingPointParserRuleCall_3_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
		
		//'################################## Jobs #################################'
		public Keyword getJobsKeyword_3_4() { return cJobsKeyword_3_4; }
		
		//('Jobs' '{' jobs+=Job jobs+=Job* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Jobs'
		public Keyword getJobsKeyword_4_0() { return cJobsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//jobs+=Job
		public Assignment getJobsAssignment_4_2() { return cJobsAssignment_4_2; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_4_2_0() { return cJobsJobParserRuleCall_4_2_0; }
		
		//jobs+=Job*
		public Assignment getJobsAssignment_4_3() { return cJobsAssignment_4_3; }
		
		//Job
		public RuleCall getJobsJobParserRuleCall_4_3_0() { return cJobsJobParserRuleCall_4_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class JobElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.Job");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cJobAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cJobKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRunTimeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRunTimeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cRunTimeRunningTimeEnumRuleCall_4_1_0 = (RuleCall)cRunTimeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cJobTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cJobTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cJobTypeJobTypeEnumRuleCall_5_1_0 = (RuleCall)cJobTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTECH_SYSTEMKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTECH_SYSTEMAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cTECH_SYSTEMEStringParserRuleCall_6_1_0 = (RuleCall)cTECH_SYSTEMAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cExecutableNameKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cExecutableNameAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cExecutableNameEStringParserRuleCall_7_1_0 = (RuleCall)cExecutableNameAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDependentJobsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cPreDecessorAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final CrossReference cPreDecessorJobCrossReference_8_2_0 = (CrossReference)cPreDecessorAssignment_8_2.eContents().get(0);
		private final RuleCall cPreDecessorJobQualifiedNameParserRuleCall_8_2_0_1 = (RuleCall)cPreDecessorJobCrossReference_8_2_0.eContents().get(1);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cPreDecessorAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final CrossReference cPreDecessorJobCrossReference_8_3_1_0 = (CrossReference)cPreDecessorAssignment_8_3_1.eContents().get(0);
		private final RuleCall cPreDecessorJobQualifiedNameParserRuleCall_8_3_1_0_1 = (RuleCall)cPreDecessorJobCrossReference_8_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cDependentProcessingPointKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cPpPreDecessorprocessingpointAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cPpPreDecessorprocessingpointProcessingPointCrossReference_9_1_0 = (CrossReference)cPpPreDecessorprocessingpointAssignment_9_1.eContents().get(0);
		private final RuleCall cPpPreDecessorprocessingpointProcessingPointQualifiedNameParserRuleCall_9_1_0_1 = (RuleCall)cPpPreDecessorprocessingpointProcessingPointCrossReference_9_1_0.eContents().get(1);
		private final Assignment cIsTestJobAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final Keyword cIsTestJobIsTestJobKeyword_10_0 = (Keyword)cIsTestJobAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Job:
		//	{Job}
		//	'Job'
		//	name=EString
		//	'{' ('RunTime' RunTime=RunningTime) ('JobType' JobType=JobType) ('TECH_SYSTEM' TECH_SYSTEM=EString) ('ExecutableName'
		//	ExecutableName=EString) ('DependentJobs' '{' preDecessor+=[Job|QualifiedName] ("," preDecessor+=[Job|QualifiedName])*
		//	'}')? ('DependentProcessingPoint' ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName])?
		//	isTestJob?='isTestJob'?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Job} 'Job' name=EString '{' ('RunTime' RunTime=RunningTime) ('JobType' JobType=JobType) ('TECH_SYSTEM'
		//TECH_SYSTEM=EString) ('ExecutableName' ExecutableName=EString) ('DependentJobs' '{' preDecessor+=[Job|QualifiedName]
		//("," preDecessor+=[Job|QualifiedName])* '}')? ('DependentProcessingPoint'
		//ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName])? isTestJob?='isTestJob'? '}'
		public Group getGroup() { return cGroup; }
		
		//{Job}
		public Action getJobAction_0() { return cJobAction_0; }
		
		//'Job'
		public Keyword getJobKeyword_1() { return cJobKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('RunTime' RunTime=RunningTime)
		public Group getGroup_4() { return cGroup_4; }
		
		//'RunTime'
		public Keyword getRunTimeKeyword_4_0() { return cRunTimeKeyword_4_0; }
		
		//RunTime=RunningTime
		public Assignment getRunTimeAssignment_4_1() { return cRunTimeAssignment_4_1; }
		
		//RunningTime
		public RuleCall getRunTimeRunningTimeEnumRuleCall_4_1_0() { return cRunTimeRunningTimeEnumRuleCall_4_1_0; }
		
		//('JobType' JobType=JobType)
		public Group getGroup_5() { return cGroup_5; }
		
		//'JobType'
		public Keyword getJobTypeKeyword_5_0() { return cJobTypeKeyword_5_0; }
		
		//JobType=JobType
		public Assignment getJobTypeAssignment_5_1() { return cJobTypeAssignment_5_1; }
		
		//JobType
		public RuleCall getJobTypeJobTypeEnumRuleCall_5_1_0() { return cJobTypeJobTypeEnumRuleCall_5_1_0; }
		
		//('TECH_SYSTEM' TECH_SYSTEM=EString)
		public Group getGroup_6() { return cGroup_6; }
		
		//'TECH_SYSTEM'
		public Keyword getTECH_SYSTEMKeyword_6_0() { return cTECH_SYSTEMKeyword_6_0; }
		
		//TECH_SYSTEM=EString
		public Assignment getTECH_SYSTEMAssignment_6_1() { return cTECH_SYSTEMAssignment_6_1; }
		
		//EString
		public RuleCall getTECH_SYSTEMEStringParserRuleCall_6_1_0() { return cTECH_SYSTEMEStringParserRuleCall_6_1_0; }
		
		//('ExecutableName' ExecutableName=EString)
		public Group getGroup_7() { return cGroup_7; }
		
		//'ExecutableName'
		public Keyword getExecutableNameKeyword_7_0() { return cExecutableNameKeyword_7_0; }
		
		//ExecutableName=EString
		public Assignment getExecutableNameAssignment_7_1() { return cExecutableNameAssignment_7_1; }
		
		//EString
		public RuleCall getExecutableNameEStringParserRuleCall_7_1_0() { return cExecutableNameEStringParserRuleCall_7_1_0; }
		
		//('DependentJobs' '{' preDecessor+=[Job|QualifiedName] ("," preDecessor+=[Job|QualifiedName])* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'DependentJobs'
		public Keyword getDependentJobsKeyword_8_0() { return cDependentJobsKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//preDecessor+=[Job|QualifiedName]
		public Assignment getPreDecessorAssignment_8_2() { return cPreDecessorAssignment_8_2; }
		
		//[Job|QualifiedName]
		public CrossReference getPreDecessorJobCrossReference_8_2_0() { return cPreDecessorJobCrossReference_8_2_0; }
		
		//QualifiedName
		public RuleCall getPreDecessorJobQualifiedNameParserRuleCall_8_2_0_1() { return cPreDecessorJobQualifiedNameParserRuleCall_8_2_0_1; }
		
		//("," preDecessor+=[Job|QualifiedName])*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//preDecessor+=[Job|QualifiedName]
		public Assignment getPreDecessorAssignment_8_3_1() { return cPreDecessorAssignment_8_3_1; }
		
		//[Job|QualifiedName]
		public CrossReference getPreDecessorJobCrossReference_8_3_1_0() { return cPreDecessorJobCrossReference_8_3_1_0; }
		
		//QualifiedName
		public RuleCall getPreDecessorJobQualifiedNameParserRuleCall_8_3_1_0_1() { return cPreDecessorJobQualifiedNameParserRuleCall_8_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//('DependentProcessingPoint' ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName])?
		public Group getGroup_9() { return cGroup_9; }
		
		//'DependentProcessingPoint'
		public Keyword getDependentProcessingPointKeyword_9_0() { return cDependentProcessingPointKeyword_9_0; }
		
		//ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName]
		public Assignment getPpPreDecessorprocessingpointAssignment_9_1() { return cPpPreDecessorprocessingpointAssignment_9_1; }
		
		//[ProcessingPoint|QualifiedName]
		public CrossReference getPpPreDecessorprocessingpointProcessingPointCrossReference_9_1_0() { return cPpPreDecessorprocessingpointProcessingPointCrossReference_9_1_0; }
		
		//QualifiedName
		public RuleCall getPpPreDecessorprocessingpointProcessingPointQualifiedNameParserRuleCall_9_1_0_1() { return cPpPreDecessorprocessingpointProcessingPointQualifiedNameParserRuleCall_9_1_0_1; }
		
		//isTestJob?='isTestJob'?
		public Assignment getIsTestJobAssignment_10() { return cIsTestJobAssignment_10; }
		
		//'isTestJob'
		public Keyword getIsTestJobIsTestJobKeyword_10_0() { return cIsTestJobIsTestJobKeyword_10_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ProcessingPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.ProcessingPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProcessingPointAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProcessingPointKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cProcessingPointTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cProcessingPointTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cProcessingPointTypeProcessingPointTypeEnumRuleCall_4_1_0 = (RuleCall)cProcessingPointTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cDependentJobsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cPreDecessorAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cPreDecessorJobCrossReference_5_2_0 = (CrossReference)cPreDecessorAssignment_5_2.eContents().get(0);
		private final RuleCall cPreDecessorJobQualifiedNameParserRuleCall_5_2_0_1 = (RuleCall)cPreDecessorJobCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cPreDecessorAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cPreDecessorJobCrossReference_5_3_1_0 = (CrossReference)cPreDecessorAssignment_5_3_1.eContents().get(0);
		private final RuleCall cPreDecessorJobQualifiedNameParserRuleCall_5_3_1_0_1 = (RuleCall)cPreDecessorJobCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ProcessingPoint:
		//	{ProcessingPoint}
		//	'ProcessingPoint'
		//	name=EString
		//	'{' ('ProcessingPointType' ProcessingPointType=ProcessingPointType) ('DependentJobs' '{'
		//	preDecessor+=[Job|QualifiedName] (',' preDecessor+=[Job|QualifiedName])* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProcessingPoint} 'ProcessingPoint' name=EString '{' ('ProcessingPointType' ProcessingPointType=ProcessingPointType)
		//('DependentJobs' '{' preDecessor+=[Job|QualifiedName] (',' preDecessor+=[Job|QualifiedName])* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{ProcessingPoint}
		public Action getProcessingPointAction_0() { return cProcessingPointAction_0; }
		
		//'ProcessingPoint'
		public Keyword getProcessingPointKeyword_1() { return cProcessingPointKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('ProcessingPointType' ProcessingPointType=ProcessingPointType)
		public Group getGroup_4() { return cGroup_4; }
		
		//'ProcessingPointType'
		public Keyword getProcessingPointTypeKeyword_4_0() { return cProcessingPointTypeKeyword_4_0; }
		
		//ProcessingPointType=ProcessingPointType
		public Assignment getProcessingPointTypeAssignment_4_1() { return cProcessingPointTypeAssignment_4_1; }
		
		//ProcessingPointType
		public RuleCall getProcessingPointTypeProcessingPointTypeEnumRuleCall_4_1_0() { return cProcessingPointTypeProcessingPointTypeEnumRuleCall_4_1_0; }
		
		//('DependentJobs' '{' preDecessor+=[Job|QualifiedName] (',' preDecessor+=[Job|QualifiedName])* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'DependentJobs'
		public Keyword getDependentJobsKeyword_5_0() { return cDependentJobsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//preDecessor+=[Job|QualifiedName]
		public Assignment getPreDecessorAssignment_5_2() { return cPreDecessorAssignment_5_2; }
		
		//[Job|QualifiedName]
		public CrossReference getPreDecessorJobCrossReference_5_2_0() { return cPreDecessorJobCrossReference_5_2_0; }
		
		//QualifiedName
		public RuleCall getPreDecessorJobQualifiedNameParserRuleCall_5_2_0_1() { return cPreDecessorJobQualifiedNameParserRuleCall_5_2_0_1; }
		
		//(',' preDecessor+=[Job|QualifiedName])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//','
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//preDecessor+=[Job|QualifiedName]
		public Assignment getPreDecessorAssignment_5_3_1() { return cPreDecessorAssignment_5_3_1; }
		
		//[Job|QualifiedName]
		public CrossReference getPreDecessorJobCrossReference_5_3_1_0() { return cPreDecessorJobCrossReference_5_3_1_0; }
		
		//QualifiedName
		public RuleCall getPreDecessorJobQualifiedNameParserRuleCall_5_3_1_0_1() { return cPreDecessorJobQualifiedNameParserRuleCall_5_3_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	public class LAYERTYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.LAYERTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSTAGEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSTAGESTAGEKeyword_0_0 = (Keyword)cSTAGEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGRATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cINTEGRATIONINTEGRATIONKeyword_1_0 = (Keyword)cINTEGRATIONEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEXPORTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEXPORTEXPORTKeyword_2_0 = (Keyword)cEXPORTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cREPORTINGEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cREPORTINGREPORTINGKeyword_3_0 = (Keyword)cREPORTINGEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cHARMONISATIONEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cHARMONISATIONHARMONISATIONKeyword_4_0 = (Keyword)cHARMONISATIONEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum LAYERTYPE returns package_enums::LAYERTYPE:
		//	STAGE | INTEGRATION | EXPORT | REPORTING | HARMONISATION;
		public EnumRule getRule() { return rule; }
		
		//STAGE | INTEGRATION | EXPORT | REPORTING | HARMONISATION
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STAGE
		public EnumLiteralDeclaration getSTAGEEnumLiteralDeclaration_0() { return cSTAGEEnumLiteralDeclaration_0; }
		
		//'STAGE'
		public Keyword getSTAGESTAGEKeyword_0_0() { return cSTAGESTAGEKeyword_0_0; }
		
		//INTEGRATION
		public EnumLiteralDeclaration getINTEGRATIONEnumLiteralDeclaration_1() { return cINTEGRATIONEnumLiteralDeclaration_1; }
		
		//'INTEGRATION'
		public Keyword getINTEGRATIONINTEGRATIONKeyword_1_0() { return cINTEGRATIONINTEGRATIONKeyword_1_0; }
		
		//EXPORT
		public EnumLiteralDeclaration getEXPORTEnumLiteralDeclaration_2() { return cEXPORTEnumLiteralDeclaration_2; }
		
		//'EXPORT'
		public Keyword getEXPORTEXPORTKeyword_2_0() { return cEXPORTEXPORTKeyword_2_0; }
		
		//REPORTING
		public EnumLiteralDeclaration getREPORTINGEnumLiteralDeclaration_3() { return cREPORTINGEnumLiteralDeclaration_3; }
		
		//'REPORTING'
		public Keyword getREPORTINGREPORTINGKeyword_3_0() { return cREPORTINGREPORTINGKeyword_3_0; }
		
		//HARMONISATION
		public EnumLiteralDeclaration getHARMONISATIONEnumLiteralDeclaration_4() { return cHARMONISATIONEnumLiteralDeclaration_4; }
		
		//'HARMONISATION'
		public Keyword getHARMONISATIONHARMONISATIONKeyword_4_0() { return cHARMONISATIONHARMONISATIONKeyword_4_0; }
	}
	public class HISTORISATIONTYPEElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.HISTORISATIONTYPE");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDAY_PARTITIONEDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDAY_PARTITIONEDDAY_PARTITIONEDKeyword_1_0 = (Keyword)cDAY_PARTITIONEDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMONTH_PARTITIONEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMONTH_PARTITIONEDMONTH_PARTITIONEDKeyword_2_0 = (Keyword)cMONTH_PARTITIONEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cBITEMPORALEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cBITEMPORALBITEMPORALKeyword_3_0 = (Keyword)cBITEMPORALEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum HISTORISATIONTYPE returns package_enums::HISTORISATIONTYPE:
		//	NONE | DAY_PARTITIONED | MONTH_PARTITIONED | BITEMPORAL;
		public EnumRule getRule() { return rule; }
		
		//NONE | DAY_PARTITIONED | MONTH_PARTITIONED | BITEMPORAL
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }
		
		//'NONE'
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }
		
		//DAY_PARTITIONED
		public EnumLiteralDeclaration getDAY_PARTITIONEDEnumLiteralDeclaration_1() { return cDAY_PARTITIONEDEnumLiteralDeclaration_1; }
		
		//'DAY_PARTITIONED'
		public Keyword getDAY_PARTITIONEDDAY_PARTITIONEDKeyword_1_0() { return cDAY_PARTITIONEDDAY_PARTITIONEDKeyword_1_0; }
		
		//MONTH_PARTITIONED
		public EnumLiteralDeclaration getMONTH_PARTITIONEDEnumLiteralDeclaration_2() { return cMONTH_PARTITIONEDEnumLiteralDeclaration_2; }
		
		//'MONTH_PARTITIONED'
		public Keyword getMONTH_PARTITIONEDMONTH_PARTITIONEDKeyword_2_0() { return cMONTH_PARTITIONEDMONTH_PARTITIONEDKeyword_2_0; }
		
		//BITEMPORAL
		public EnumLiteralDeclaration getBITEMPORALEnumLiteralDeclaration_3() { return cBITEMPORALEnumLiteralDeclaration_3; }
		
		//'BITEMPORAL'
		public Keyword getBITEMPORALBITEMPORALKeyword_3_0() { return cBITEMPORALBITEMPORALKeyword_3_0; }
	}
	public class REPRESENTATIONSElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.REPRESENTATIONS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFLAT_TABLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFLAT_TABLEFLAT_TABLEKeyword_0_0 = (Keyword)cFLAT_TABLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATAVAULTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATAVAULTDATAVAULTKeyword_1_0 = (Keyword)cDATAVAULTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cThirdNFEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cThirdNFThirdNFKeyword_2_0 = (Keyword)cThirdNFEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cSNOWFLAKEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cSNOWFLAKESNOWFLAKEKeyword_3_0 = (Keyword)cSNOWFLAKEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSTAREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSTARSTARKeyword_4_0 = (Keyword)cSTAREnumLiteralDeclaration_4.eContents().get(0);
		
		//enum REPRESENTATIONS returns package_enums::REPRESENTATIONS:
		//	FLAT_TABLE | DATAVAULT | ThirdNF | SNOWFLAKE | STAR;
		public EnumRule getRule() { return rule; }
		
		//FLAT_TABLE | DATAVAULT | ThirdNF | SNOWFLAKE | STAR
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//FLAT_TABLE
		public EnumLiteralDeclaration getFLAT_TABLEEnumLiteralDeclaration_0() { return cFLAT_TABLEEnumLiteralDeclaration_0; }
		
		//'FLAT_TABLE'
		public Keyword getFLAT_TABLEFLAT_TABLEKeyword_0_0() { return cFLAT_TABLEFLAT_TABLEKeyword_0_0; }
		
		//DATAVAULT
		public EnumLiteralDeclaration getDATAVAULTEnumLiteralDeclaration_1() { return cDATAVAULTEnumLiteralDeclaration_1; }
		
		//'DATAVAULT'
		public Keyword getDATAVAULTDATAVAULTKeyword_1_0() { return cDATAVAULTDATAVAULTKeyword_1_0; }
		
		//ThirdNF
		public EnumLiteralDeclaration getThirdNFEnumLiteralDeclaration_2() { return cThirdNFEnumLiteralDeclaration_2; }
		
		//'ThirdNF'
		public Keyword getThirdNFThirdNFKeyword_2_0() { return cThirdNFThirdNFKeyword_2_0; }
		
		//SNOWFLAKE
		public EnumLiteralDeclaration getSNOWFLAKEEnumLiteralDeclaration_3() { return cSNOWFLAKEEnumLiteralDeclaration_3; }
		
		//'SNOWFLAKE'
		public Keyword getSNOWFLAKESNOWFLAKEKeyword_3_0() { return cSNOWFLAKESNOWFLAKEKeyword_3_0; }
		
		//STAR
		public EnumLiteralDeclaration getSTAREnumLiteralDeclaration_4() { return cSTAREnumLiteralDeclaration_4; }
		
		//'STAR'
		public Keyword getSTARSTARKeyword_4_0() { return cSTARSTARKeyword_4_0; }
	}
	public class RunningTimeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.RunningTime");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEveryDayEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEveryDayEveryDayKeyword_0_0 = (Keyword)cEveryDayEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWorkingDayEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWorkingDayWorkingDayKeyword_1_0 = (Keyword)cWorkingDayEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWeeklyEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWeeklyWeeklyKeyword_2_0 = (Keyword)cWeeklyEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMonthlyUltimoEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMonthlyUltimoMonthlyUltimoKeyword_3_0 = (Keyword)cMonthlyUltimoEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum RunningTime:
		//	EveryDay | WorkingDay | Weekly | MonthlyUltimo;
		public EnumRule getRule() { return rule; }
		
		//EveryDay | WorkingDay | Weekly | MonthlyUltimo
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EveryDay
		public EnumLiteralDeclaration getEveryDayEnumLiteralDeclaration_0() { return cEveryDayEnumLiteralDeclaration_0; }
		
		//'EveryDay'
		public Keyword getEveryDayEveryDayKeyword_0_0() { return cEveryDayEveryDayKeyword_0_0; }
		
		//WorkingDay
		public EnumLiteralDeclaration getWorkingDayEnumLiteralDeclaration_1() { return cWorkingDayEnumLiteralDeclaration_1; }
		
		//'WorkingDay'
		public Keyword getWorkingDayWorkingDayKeyword_1_0() { return cWorkingDayWorkingDayKeyword_1_0; }
		
		//Weekly
		public EnumLiteralDeclaration getWeeklyEnumLiteralDeclaration_2() { return cWeeklyEnumLiteralDeclaration_2; }
		
		//'Weekly'
		public Keyword getWeeklyWeeklyKeyword_2_0() { return cWeeklyWeeklyKeyword_2_0; }
		
		//MonthlyUltimo
		public EnumLiteralDeclaration getMonthlyUltimoEnumLiteralDeclaration_3() { return cMonthlyUltimoEnumLiteralDeclaration_3; }
		
		//'MonthlyUltimo'
		public Keyword getMonthlyUltimoMonthlyUltimoKeyword_3_0() { return cMonthlyUltimoMonthlyUltimoKeyword_3_0; }
	}
	public class JobTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.JobType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTriggerEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTriggerTriggerKeyword_0_0 = (Keyword)cTriggerEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cImportEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cImportImportKeyword_1_0 = (Keyword)cImportEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIntegrationEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIntegrationIntegrationKeyword_2_0 = (Keyword)cIntegrationEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cI2IEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cI2II2IKeyword_3_0 = (Keyword)cI2IEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cExportEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cExportExportKeyword_4_0 = (Keyword)cExportEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cProcessigPointEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cProcessigPointProcessigPointKeyword_5_0 = (Keyword)cProcessigPointEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum JobType:
		//	Trigger | Import | Integration | I2I | Export | ProcessigPoint;
		public EnumRule getRule() { return rule; }
		
		//Trigger | Import | Integration | I2I | Export | ProcessigPoint
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Trigger
		public EnumLiteralDeclaration getTriggerEnumLiteralDeclaration_0() { return cTriggerEnumLiteralDeclaration_0; }
		
		//'Trigger'
		public Keyword getTriggerTriggerKeyword_0_0() { return cTriggerTriggerKeyword_0_0; }
		
		//Import
		public EnumLiteralDeclaration getImportEnumLiteralDeclaration_1() { return cImportEnumLiteralDeclaration_1; }
		
		//'Import'
		public Keyword getImportImportKeyword_1_0() { return cImportImportKeyword_1_0; }
		
		//Integration
		public EnumLiteralDeclaration getIntegrationEnumLiteralDeclaration_2() { return cIntegrationEnumLiteralDeclaration_2; }
		
		//'Integration'
		public Keyword getIntegrationIntegrationKeyword_2_0() { return cIntegrationIntegrationKeyword_2_0; }
		
		//I2I
		public EnumLiteralDeclaration getI2IEnumLiteralDeclaration_3() { return cI2IEnumLiteralDeclaration_3; }
		
		//'I2I'
		public Keyword getI2II2IKeyword_3_0() { return cI2II2IKeyword_3_0; }
		
		//Export
		public EnumLiteralDeclaration getExportEnumLiteralDeclaration_4() { return cExportEnumLiteralDeclaration_4; }
		
		//'Export'
		public Keyword getExportExportKeyword_4_0() { return cExportExportKeyword_4_0; }
		
		//ProcessigPoint
		public EnumLiteralDeclaration getProcessigPointEnumLiteralDeclaration_5() { return cProcessigPointEnumLiteralDeclaration_5; }
		
		//'ProcessigPoint'
		public Keyword getProcessigPointProcessigPointKeyword_5_0() { return cProcessigPointProcessigPointKeyword_5_0; }
	}
	public class ProcessingPointTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.jobdsl.JobDsl.ProcessingPointType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBusinessEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBusinessBusinessKeyword_0_0 = (Keyword)cBusinessEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cTechEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cTechTechKeyword_1_0 = (Keyword)cTechEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cTestEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cTestTestKeyword_2_0 = (Keyword)cTestEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum ProcessingPointType:
		//	Business | Tech | Test;
		public EnumRule getRule() { return rule; }
		
		//Business | Tech | Test
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Business
		public EnumLiteralDeclaration getBusinessEnumLiteralDeclaration_0() { return cBusinessEnumLiteralDeclaration_0; }
		
		//'Business'
		public Keyword getBusinessBusinessKeyword_0_0() { return cBusinessBusinessKeyword_0_0; }
		
		//Tech
		public EnumLiteralDeclaration getTechEnumLiteralDeclaration_1() { return cTechEnumLiteralDeclaration_1; }
		
		//'Tech'
		public Keyword getTechTechKeyword_1_0() { return cTechTechKeyword_1_0; }
		
		//Test
		public EnumLiteralDeclaration getTestEnumLiteralDeclaration_2() { return cTestEnumLiteralDeclaration_2; }
		
		//'Test'
		public Keyword getTestTestKeyword_2_0() { return cTestTestKeyword_2_0; }
	}
	
	private final SchedulePackageElements pSchedulePackage;
	private final EStringElements pEString;
	private final LAYERTYPEElements eLAYERTYPE;
	private final HISTORISATIONTYPEElements eHISTORISATIONTYPE;
	private final REPRESENTATIONSElements eREPRESENTATIONS;
	private final QualifiedNameElements pQualifiedName;
	private final JobElements pJob;
	private final ProcessingPointElements pProcessingPoint;
	private final RunningTimeElements eRunningTime;
	private final JobTypeElements eJobType;
	private final EBooleanElements pEBoolean;
	private final ProcessingPointTypeElements eProcessingPointType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public JobDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSchedulePackage = new SchedulePackageElements();
		this.pEString = new EStringElements();
		this.eLAYERTYPE = new LAYERTYPEElements();
		this.eHISTORISATIONTYPE = new HISTORISATIONTYPEElements();
		this.eREPRESENTATIONS = new REPRESENTATIONSElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pJob = new JobElements();
		this.pProcessingPoint = new ProcessingPointElements();
		this.eRunningTime = new RunningTimeElements();
		this.eJobType = new JobTypeElements();
		this.pEBoolean = new EBooleanElements();
		this.eProcessingPointType = new ProcessingPointTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.etl_modeling.jobdsl.JobDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SchedulePackage:
	//	{SchedulePackage}
	//	'SchedulePackage'
	//	name=EString ('ProcessingPoint' '{' processingpoint=ProcessingPoint '}'
	//	'################################## Jobs #################################') ('Jobs' '{' jobs+=Job jobs+=Job* '}')?;
	public SchedulePackageElements getSchedulePackageAccess() {
		return pSchedulePackage;
	}
	
	public ParserRule getSchedulePackageRule() {
		return getSchedulePackageAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum LAYERTYPE returns package_enums::LAYERTYPE:
	//	STAGE | INTEGRATION | EXPORT | REPORTING | HARMONISATION;
	public LAYERTYPEElements getLAYERTYPEAccess() {
		return eLAYERTYPE;
	}
	
	public EnumRule getLAYERTYPERule() {
		return getLAYERTYPEAccess().getRule();
	}
	
	//enum HISTORISATIONTYPE returns package_enums::HISTORISATIONTYPE:
	//	NONE | DAY_PARTITIONED | MONTH_PARTITIONED | BITEMPORAL;
	public HISTORISATIONTYPEElements getHISTORISATIONTYPEAccess() {
		return eHISTORISATIONTYPE;
	}
	
	public EnumRule getHISTORISATIONTYPERule() {
		return getHISTORISATIONTYPEAccess().getRule();
	}
	
	//enum REPRESENTATIONS returns package_enums::REPRESENTATIONS:
	//	FLAT_TABLE | DATAVAULT | ThirdNF | SNOWFLAKE | STAR;
	public REPRESENTATIONSElements getREPRESENTATIONSAccess() {
		return eREPRESENTATIONS;
	}
	
	public EnumRule getREPRESENTATIONSRule() {
		return getREPRESENTATIONSAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//Job:
	//	{Job}
	//	'Job'
	//	name=EString
	//	'{' ('RunTime' RunTime=RunningTime) ('JobType' JobType=JobType) ('TECH_SYSTEM' TECH_SYSTEM=EString) ('ExecutableName'
	//	ExecutableName=EString) ('DependentJobs' '{' preDecessor+=[Job|QualifiedName] ("," preDecessor+=[Job|QualifiedName])*
	//	'}')? ('DependentProcessingPoint' ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName])?
	//	isTestJob?='isTestJob'?
	//	'}';
	public JobElements getJobAccess() {
		return pJob;
	}
	
	public ParserRule getJobRule() {
		return getJobAccess().getRule();
	}
	
	//ProcessingPoint:
	//	{ProcessingPoint}
	//	'ProcessingPoint'
	//	name=EString
	//	'{' ('ProcessingPointType' ProcessingPointType=ProcessingPointType) ('DependentJobs' '{'
	//	preDecessor+=[Job|QualifiedName] (',' preDecessor+=[Job|QualifiedName])* '}')?
	//	'}';
	public ProcessingPointElements getProcessingPointAccess() {
		return pProcessingPoint;
	}
	
	public ParserRule getProcessingPointRule() {
		return getProcessingPointAccess().getRule();
	}
	
	//enum RunningTime:
	//	EveryDay | WorkingDay | Weekly | MonthlyUltimo;
	public RunningTimeElements getRunningTimeAccess() {
		return eRunningTime;
	}
	
	public EnumRule getRunningTimeRule() {
		return getRunningTimeAccess().getRule();
	}
	
	//enum JobType:
	//	Trigger | Import | Integration | I2I | Export | ProcessigPoint;
	public JobTypeElements getJobTypeAccess() {
		return eJobType;
	}
	
	public EnumRule getJobTypeRule() {
		return getJobTypeAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum ProcessingPointType:
	//	Business | Tech | Test;
	public ProcessingPointTypeElements getProcessingPointTypeAccess() {
		return eProcessingPointType;
	}
	
	public EnumRule getProcessingPointTypeRule() {
		return getProcessingPointTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
