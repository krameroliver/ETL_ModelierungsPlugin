// automatically generated by Xtext
grammar org.etl_modeling.jobdsl.JobDsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.etl_modelling.de/model/jobnetz.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/org.etl_modelling.de/model/package_enums.ecore" as package_enums

SchedulePackage returns SchedulePackage:
	{SchedulePackage}
	'SchedulePackage'
	name=EString
	('ProcessingPoint' '{' processingpoint=ProcessingPoint'}''################################## Jobs #################################' )
	('Jobs' '{' jobs+=Job ( jobs+=Job)*'}')?;



EString returns ecore::EString:
	STRING | ID;

enum LAYERTYPE returns package_enums::LAYERTYPE:
				STAGE = 'STAGE' | INTEGRATION = 'INTEGRATION' | EXPORT = 'EXPORT' | REPORTING = 'REPORTING' | HARMONISATION = 'HARMONISATION';

enum HISTORISATIONTYPE returns package_enums::HISTORISATIONTYPE:
				NONE = 'NONE' | DAY_PARTITIONED = 'DAY_PARTITIONED' | MONTH_PARTITIONED = 'MONTH_PARTITIONED' | BITEMPORAL = 'BITEMPORAL';

enum REPRESENTATIONS returns package_enums::REPRESENTATIONS:
				FLAT_TABLE = 'FLAT_TABLE' | DATAVAULT = 'DATAVAULT' | ThirdNF = 'ThirdNF' | SNOWFLAKE = 'SNOWFLAKE' | STAR = 'STAR';

QualifiedName:
    ID ('.' ID)*;

Job returns Job:
	{Job}
	'Job'
	name=EString
	'{'
		('RunTime' RunTime=RunningTime)
		('JobType' JobType=JobType)
		('TECH_SYSTEM' TECH_SYSTEM=EString)
		('ExecutableName' ExecutableName=EString)
		('DependentJobs' '{' preDecessor+=[Job|QualifiedName] ( "," preDecessor+=[Job|QualifiedName])* '}' )? 
		('DependentProcessingPoint' ppPreDecessorprocessingpoint=[ProcessingPoint|QualifiedName])? 
		(isTestJob?='isTestJob')?
		
	'}' ;

ProcessingPoint returns ProcessingPoint:
	{ProcessingPoint}
	'ProcessingPoint'
	name=EString
	'{'
		('ProcessingPointType' ProcessingPointType=ProcessingPointType)
		('DependentJobs' '{' preDecessor+=[Job|QualifiedName](',' preDecessor+=[Job|QualifiedName])*'}')?
		
	'}';

enum RunningTime returns RunningTime:
				EveryDay = 'EveryDay' | WorkingDay = 'WorkingDay' | Weekly = 'Weekly' | MonthlyUltimo = 'MonthlyUltimo';

enum JobType returns JobType:
				Trigger = 'Trigger' | Import = 'Import' | Integration = 'Integration' | I2I = 'I2I' | Export = 'Export' | ProcessigPoint = 'ProcessigPoint';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

enum ProcessingPointType returns ProcessingPointType:
				Business = 'Business' | Tech = 'Tech' | Test = 'Test';
