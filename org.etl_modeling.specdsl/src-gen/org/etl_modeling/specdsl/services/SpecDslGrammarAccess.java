/*
 * generated by Xtext 2.22.0
 */
package org.etl_modeling.specdsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SpecDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class SpecPackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.SpecPackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpecPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSpecPackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cSpecificationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSpecificationsSpecificationParserRuleCall_3_0 = (RuleCall)cSpecificationsAssignment_3.eContents().get(0);
		
		//SpecPackage specmodel::SpecPackage:
		//	{specmodel::SpecPackage}
		//	'SpecPackage' name=EString
		//	specifications+=Specification*;
		@Override public ParserRule getRule() { return rule; }
		
		//{specmodel::SpecPackage} 'SpecPackage' name=EString specifications+=Specification*
		public Group getGroup() { return cGroup; }
		
		//{specmodel::SpecPackage}
		public Action getSpecPackageAction_0() { return cSpecPackageAction_0; }
		
		//'SpecPackage'
		public Keyword getSpecPackageKeyword_1() { return cSpecPackageKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//specifications+=Specification*
		public Assignment getSpecificationsAssignment_3() { return cSpecificationsAssignment_3; }
		
		//Specification
		public RuleCall getSpecificationsSpecificationParserRuleCall_3_0() { return cSpecificationsSpecificationParserRuleCall_3_0; }
	}
	public class SpecificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.Specification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSpecificationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTargetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBusinessrulesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBusinessrulesBusinessRuleParserRuleCall_4_0 = (RuleCall)cBusinessrulesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Specification specmodel::Specification:
		//	'Specification' name=EString '{'
		//	'target' businessrules+=BusinessRule
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Specification' name=EString '{' 'target' businessrules+=BusinessRule '}'
		public Group getGroup() { return cGroup; }
		
		//'Specification'
		public Keyword getSpecificationKeyword_0() { return cSpecificationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'target'
		public Keyword getTargetKeyword_3() { return cTargetKeyword_3; }
		
		//businessrules+=BusinessRule
		public Assignment getBusinessrulesAssignment_4() { return cBusinessrulesAssignment_4; }
		
		//BusinessRule
		public RuleCall getBusinessrulesBusinessRuleParserRuleCall_4_0() { return cBusinessrulesBusinessRuleParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class BusinessRuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.BusinessRule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBusinessRuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRuleTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRuleTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRuleTypeRuleTypeEnumRuleCall_2_0 = (RuleCall)cRuleTypeAssignment_2.eContents().get(0);
		private final Keyword cBusinessRuleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameEStringParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cTargetEntityKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Assignment cTargetEntityAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final CrossReference cTargetEntityEntityCrossReference_5_0_1_0 = (CrossReference)cTargetEntityAssignment_5_0_1.eContents().get(0);
		private final RuleCall cTargetEntityEntityQualifiedNameParserRuleCall_5_0_1_0_1 = (RuleCall)cTargetEntityEntityCrossReference_5_0_1_0.eContents().get(1);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cTargetRelationshipKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cTargetRelationshipAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cTargetRelationshipRelationshipCrossReference_5_1_1_0 = (CrossReference)cTargetRelationshipAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTargetRelationshipRelationshipQualifiedNameParserRuleCall_5_1_1_0_1 = (RuleCall)cTargetRelationshipRelationshipCrossReference_5_1_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cAlternatives_5.eContents().get(2);
		private final Keyword cTargetIncludeSatelitKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cTargetIncludeAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cTargetIncludeIncludeCrossReference_5_2_1_0 = (CrossReference)cTargetIncludeAssignment_5_2_1.eContents().get(0);
		private final RuleCall cTargetIncludeIncludeQualifiedNameParserRuleCall_5_2_1_0_1 = (RuleCall)cTargetIncludeIncludeCrossReference_5_2_1_0.eContents().get(1);
		private final Assignment cSourcesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSourcesPrimarySourceParserRuleCall_6_0 = (RuleCall)cSourcesAssignment_6.eContents().get(0);
		
		//BusinessRule specmodel::BusinessRule:
		//	{specmodel::BusinessRule}
		//	'RuleType' RuleType=RuleType
		//	'BusinessRule' name=EString ('targetEntity' targetEntity=[logmodel::Entity|QualifiedName] | 'targetRelationship'
		//	targetRelationship=[logmodel::Relationship|QualifiedName] | 'targetIncludeSatelit'
		//	targetInclude=[logmodel::Include|QualifiedName]) sources+=PrimarySource*;
		@Override public ParserRule getRule() { return rule; }
		
		//{specmodel::BusinessRule} 'RuleType' RuleType=RuleType 'BusinessRule' name=EString ('targetEntity'
		//targetEntity=[logmodel::Entity|QualifiedName] | 'targetRelationship'
		//targetRelationship=[logmodel::Relationship|QualifiedName] | 'targetIncludeSatelit'
		//targetInclude=[logmodel::Include|QualifiedName]) sources+=PrimarySource*
		public Group getGroup() { return cGroup; }
		
		//{specmodel::BusinessRule}
		public Action getBusinessRuleAction_0() { return cBusinessRuleAction_0; }
		
		//'RuleType'
		public Keyword getRuleTypeKeyword_1() { return cRuleTypeKeyword_1; }
		
		//RuleType=RuleType
		public Assignment getRuleTypeAssignment_2() { return cRuleTypeAssignment_2; }
		
		//RuleType
		public RuleCall getRuleTypeRuleTypeEnumRuleCall_2_0() { return cRuleTypeRuleTypeEnumRuleCall_2_0; }
		
		//'BusinessRule'
		public Keyword getBusinessRuleKeyword_3() { return cBusinessRuleKeyword_3; }
		
		//name=EString
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_4_0() { return cNameEStringParserRuleCall_4_0; }
		
		//('targetEntity' targetEntity=[logmodel::Entity|QualifiedName] | 'targetRelationship'
		//targetRelationship=[logmodel::Relationship|QualifiedName] | 'targetIncludeSatelit'
		//targetInclude=[logmodel::Include|QualifiedName])
		public Alternatives getAlternatives_5() { return cAlternatives_5; }
		
		//'targetEntity' targetEntity=[logmodel::Entity|QualifiedName]
		public Group getGroup_5_0() { return cGroup_5_0; }
		
		//'targetEntity'
		public Keyword getTargetEntityKeyword_5_0_0() { return cTargetEntityKeyword_5_0_0; }
		
		//targetEntity=[logmodel::Entity|QualifiedName]
		public Assignment getTargetEntityAssignment_5_0_1() { return cTargetEntityAssignment_5_0_1; }
		
		//[logmodel::Entity|QualifiedName]
		public CrossReference getTargetEntityEntityCrossReference_5_0_1_0() { return cTargetEntityEntityCrossReference_5_0_1_0; }
		
		//QualifiedName
		public RuleCall getTargetEntityEntityQualifiedNameParserRuleCall_5_0_1_0_1() { return cTargetEntityEntityQualifiedNameParserRuleCall_5_0_1_0_1; }
		
		//'targetRelationship' targetRelationship=[logmodel::Relationship|QualifiedName]
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//'targetRelationship'
		public Keyword getTargetRelationshipKeyword_5_1_0() { return cTargetRelationshipKeyword_5_1_0; }
		
		//targetRelationship=[logmodel::Relationship|QualifiedName]
		public Assignment getTargetRelationshipAssignment_5_1_1() { return cTargetRelationshipAssignment_5_1_1; }
		
		//[logmodel::Relationship|QualifiedName]
		public CrossReference getTargetRelationshipRelationshipCrossReference_5_1_1_0() { return cTargetRelationshipRelationshipCrossReference_5_1_1_0; }
		
		//QualifiedName
		public RuleCall getTargetRelationshipRelationshipQualifiedNameParserRuleCall_5_1_1_0_1() { return cTargetRelationshipRelationshipQualifiedNameParserRuleCall_5_1_1_0_1; }
		
		//'targetIncludeSatelit' targetInclude=[logmodel::Include|QualifiedName]
		public Group getGroup_5_2() { return cGroup_5_2; }
		
		//'targetIncludeSatelit'
		public Keyword getTargetIncludeSatelitKeyword_5_2_0() { return cTargetIncludeSatelitKeyword_5_2_0; }
		
		//targetInclude=[logmodel::Include|QualifiedName]
		public Assignment getTargetIncludeAssignment_5_2_1() { return cTargetIncludeAssignment_5_2_1; }
		
		//[logmodel::Include|QualifiedName]
		public CrossReference getTargetIncludeIncludeCrossReference_5_2_1_0() { return cTargetIncludeIncludeCrossReference_5_2_1_0; }
		
		//QualifiedName
		public RuleCall getTargetIncludeIncludeQualifiedNameParserRuleCall_5_2_1_0_1() { return cTargetIncludeIncludeQualifiedNameParserRuleCall_5_2_1_0_1; }
		
		//sources+=PrimarySource*
		public Assignment getSourcesAssignment_6() { return cSourcesAssignment_6; }
		
		//PrimarySource
		public RuleCall getSourcesPrimarySourceParserRuleCall_6_0() { return cSourcesPrimarySourceParserRuleCall_6_0; }
	}
	public class PrimarySourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.PrimarySource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimarySourceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSourceEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSourceEntityEntityCrossReference_1_0 = (CrossReference)cSourceEntityAssignment_1.eContents().get(0);
		private final RuleCall cSourceEntityEntityQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cSourceEntityEntityCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAliasKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasEStringParserRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cChildSourcesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Assignment cChildSourcesAssignment_3_2_0 = (Assignment)cGroup_3_2.eContents().get(0);
		private final RuleCall cChildSourcesSourceParserRuleCall_3_2_0_0 = (RuleCall)cChildSourcesAssignment_3_2_0.eContents().get(0);
		private final Assignment cChildSourcesAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cChildSourcesSourceParserRuleCall_3_2_1_0 = (RuleCall)cChildSourcesAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		///*###################################################################################################### */
		//PrimarySource specmodel::Source:
		//	'PrimarySource' sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)? ('childSources' '['
		//	(childSources+=Source childSources+=Source*)
		//	']')*;
		@Override public ParserRule getRule() { return rule; }
		
		//'PrimarySource' sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)? ('childSources' '['
		//(childSources+=Source childSources+=Source*) ']')*
		public Group getGroup() { return cGroup; }
		
		//'PrimarySource'
		public Keyword getPrimarySourceKeyword_0() { return cPrimarySourceKeyword_0; }
		
		//sourceEntity=[logmodel::Entity|QualifiedName]
		public Assignment getSourceEntityAssignment_1() { return cSourceEntityAssignment_1; }
		
		//[logmodel::Entity|QualifiedName]
		public CrossReference getSourceEntityEntityCrossReference_1_0() { return cSourceEntityEntityCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getSourceEntityEntityQualifiedNameParserRuleCall_1_0_1() { return cSourceEntityEntityQualifiedNameParserRuleCall_1_0_1; }
		
		//('alias' alias=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'alias'
		public Keyword getAliasKeyword_2_0() { return cAliasKeyword_2_0; }
		
		//alias=EString
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }
		
		//EString
		public RuleCall getAliasEStringParserRuleCall_2_1_0() { return cAliasEStringParserRuleCall_2_1_0; }
		
		//('childSources' '[' (childSources+=Source childSources+=Source*) ']')*
		public Group getGroup_3() { return cGroup_3; }
		
		//'childSources'
		public Keyword getChildSourcesKeyword_3_0() { return cChildSourcesKeyword_3_0; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1() { return cLeftSquareBracketKeyword_3_1; }
		
		//(childSources+=Source childSources+=Source*)
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//childSources+=Source
		public Assignment getChildSourcesAssignment_3_2_0() { return cChildSourcesAssignment_3_2_0; }
		
		//Source
		public RuleCall getChildSourcesSourceParserRuleCall_3_2_0_0() { return cChildSourcesSourceParserRuleCall_3_2_0_0; }
		
		//childSources+=Source*
		public Assignment getChildSourcesAssignment_3_2_1() { return cChildSourcesAssignment_3_2_1; }
		
		//Source
		public RuleCall getChildSourcesSourceParserRuleCall_3_2_1_0() { return cChildSourcesSourceParserRuleCall_3_2_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }
	}
	public class SourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.Source");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSourceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cSourceEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSourceEntityEntityCrossReference_1_0 = (CrossReference)cSourceEntityAssignment_1.eContents().get(0);
		private final RuleCall cSourceEntityEntityQualifiedNameParserRuleCall_1_0_1 = (RuleCall)cSourceEntityEntityCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAliasKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAliasAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAliasEStringParserRuleCall_2_1_0 = (RuleCall)cAliasAssignment_2_1.eContents().get(0);
		private final Assignment cIsMandatoryAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cIsMandatoryMandatoryKeyword_3_0 = (Keyword)cIsMandatoryAssignment_3.eContents().get(0);
		private final Assignment cIsMultiplyingAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cIsMultiplyingIsMultiplyingKeyword_4_0 = (Keyword)cIsMultiplyingAssignment_4.eContents().get(0);
		private final Assignment cIsVectorAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cIsVectorVectorKeyword_5_0 = (Keyword)cIsVectorAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVectoryKeysKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Assignment cVectorkeysAssignment_6_2_0 = (Assignment)cGroup_6_2.eContents().get(0);
		private final RuleCall cVectorkeysVectorKeyParserRuleCall_6_2_0_0 = (RuleCall)cVectorkeysAssignment_6_2_0.eContents().get(0);
		private final Group cGroup_6_2_1 = (Group)cGroup_6_2.eContents().get(1);
		private final Keyword cCommaKeyword_6_2_1_0 = (Keyword)cGroup_6_2_1.eContents().get(0);
		private final Assignment cVectorkeysAssignment_6_2_1_1 = (Assignment)cGroup_6_2_1.eContents().get(1);
		private final RuleCall cVectorkeysVectorKeyParserRuleCall_6_2_1_1_0 = (RuleCall)cVectorkeysAssignment_6_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_2_2 = (Keyword)cGroup_6_2.eContents().get(2);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cJoinViaLinkKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSourceReleationshipAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cSourceReleationshipRelationshipCrossReference_7_1_0 = (CrossReference)cSourceReleationshipAssignment_7_1.eContents().get(0);
		private final RuleCall cSourceReleationshipRelationshipQualifiedNameParserRuleCall_7_1_0_1 = (RuleCall)cSourceReleationshipRelationshipCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cJoinCommentKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cJoinCommentAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cJoinCommentEStringParserRuleCall_8_1_0 = (RuleCall)cJoinCommentAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cPrimaryJoinFieldsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Assignment cParentJoinFieldsAssignment_9_2_0 = (Assignment)cGroup_9_2.eContents().get(0);
		private final RuleCall cParentJoinFieldsJoinFieldParserRuleCall_9_2_0_0 = (RuleCall)cParentJoinFieldsAssignment_9_2_0.eContents().get(0);
		private final Group cGroup_9_2_1 = (Group)cGroup_9_2.eContents().get(1);
		private final Keyword cCommaKeyword_9_2_1_0 = (Keyword)cGroup_9_2_1.eContents().get(0);
		private final Assignment cParentJoinFieldsAssignment_9_2_1_1 = (Assignment)cGroup_9_2_1.eContents().get(1);
		private final RuleCall cParentJoinFieldsJoinFieldParserRuleCall_9_2_1_1_0 = (RuleCall)cParentJoinFieldsAssignment_9_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cSecondaryJoinFieldKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Group cGroup_10_2 = (Group)cGroup_10.eContents().get(2);
		private final Assignment cChildJoinFieldAssignment_10_2_0 = (Assignment)cGroup_10_2.eContents().get(0);
		private final RuleCall cChildJoinFieldJoinFieldParserRuleCall_10_2_0_0 = (RuleCall)cChildJoinFieldAssignment_10_2_0.eContents().get(0);
		private final Group cGroup_10_2_1 = (Group)cGroup_10_2.eContents().get(1);
		private final Keyword cCommaKeyword_10_2_1_0 = (Keyword)cGroup_10_2_1.eContents().get(0);
		private final Assignment cChildJoinFieldAssignment_10_2_1_1 = (Assignment)cGroup_10_2_1.eContents().get(1);
		private final RuleCall cChildJoinFieldJoinFieldParserRuleCall_10_2_1_1_0 = (RuleCall)cChildJoinFieldAssignment_10_2_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cJoinTypeKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cJoinTypeAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cJoinTypeJoinTypeEnumRuleCall_11_1_0 = (RuleCall)cJoinTypeAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cLeftSquareBracketKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cChildSourcesAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cChildSourcesSourceParserRuleCall_12_1_0 = (RuleCall)cChildSourcesAssignment_12_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		
		//Source specmodel::Source:
		//	{specmodel::Source} sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)?
		//	isMandatory?='mandatory'?
		//	isMultiplying?='isMultiplying'?
		//	isVector?='Vector'? ('VectoryKeys' '{' (vectorkeys+=VectorKey (',' vectorkeys+=VectorKey)* '}'))? ('JoinViaLink'
		//	sourceReleationship=[logmodel::Relationship|QualifiedName])? ('JoinComment' joinComment=EString)?
		//	('PrimaryJoinFields' '{' (parentJoinFields+=JoinField (',' parentJoinFields+=JoinField)*) '}')? ('SecondaryJoinField'
		//	'{' (childJoinField+=JoinField (',' childJoinField+=JoinField)*) '}')? ('JoinType' JoinType=JoinType)? ('['
		//	childSources+=Source
		//	']')*;
		@Override public ParserRule getRule() { return rule; }
		
		//{specmodel::Source} sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)? isMandatory?='mandatory'?
		//isMultiplying?='isMultiplying'? isVector?='Vector'? ('VectoryKeys' '{' (vectorkeys+=VectorKey (','
		//vectorkeys+=VectorKey)* '}'))? ('JoinViaLink' sourceReleationship=[logmodel::Relationship|QualifiedName])?
		//('JoinComment' joinComment=EString)? ('PrimaryJoinFields' '{' (parentJoinFields+=JoinField (','
		//parentJoinFields+=JoinField)*) '}')? ('SecondaryJoinField' '{' (childJoinField+=JoinField (','
		//childJoinField+=JoinField)*) '}')? ('JoinType' JoinType=JoinType)? ('[' childSources+=Source ']')*
		public Group getGroup() { return cGroup; }
		
		//{specmodel::Source}
		public Action getSourceAction_0() { return cSourceAction_0; }
		
		//sourceEntity=[logmodel::Entity|QualifiedName]
		public Assignment getSourceEntityAssignment_1() { return cSourceEntityAssignment_1; }
		
		//[logmodel::Entity|QualifiedName]
		public CrossReference getSourceEntityEntityCrossReference_1_0() { return cSourceEntityEntityCrossReference_1_0; }
		
		//QualifiedName
		public RuleCall getSourceEntityEntityQualifiedNameParserRuleCall_1_0_1() { return cSourceEntityEntityQualifiedNameParserRuleCall_1_0_1; }
		
		//('alias' alias=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'alias'
		public Keyword getAliasKeyword_2_0() { return cAliasKeyword_2_0; }
		
		//alias=EString
		public Assignment getAliasAssignment_2_1() { return cAliasAssignment_2_1; }
		
		//EString
		public RuleCall getAliasEStringParserRuleCall_2_1_0() { return cAliasEStringParserRuleCall_2_1_0; }
		
		//isMandatory?='mandatory'?
		public Assignment getIsMandatoryAssignment_3() { return cIsMandatoryAssignment_3; }
		
		//'mandatory'
		public Keyword getIsMandatoryMandatoryKeyword_3_0() { return cIsMandatoryMandatoryKeyword_3_0; }
		
		//isMultiplying?='isMultiplying'?
		public Assignment getIsMultiplyingAssignment_4() { return cIsMultiplyingAssignment_4; }
		
		//'isMultiplying'
		public Keyword getIsMultiplyingIsMultiplyingKeyword_4_0() { return cIsMultiplyingIsMultiplyingKeyword_4_0; }
		
		//isVector?='Vector'?
		public Assignment getIsVectorAssignment_5() { return cIsVectorAssignment_5; }
		
		//'Vector'
		public Keyword getIsVectorVectorKeyword_5_0() { return cIsVectorVectorKeyword_5_0; }
		
		//('VectoryKeys' '{' (vectorkeys+=VectorKey (',' vectorkeys+=VectorKey)* '}'))?
		public Group getGroup_6() { return cGroup_6; }
		
		//'VectoryKeys'
		public Keyword getVectoryKeysKeyword_6_0() { return cVectoryKeysKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//(vectorkeys+=VectorKey (',' vectorkeys+=VectorKey)* '}')
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//vectorkeys+=VectorKey
		public Assignment getVectorkeysAssignment_6_2_0() { return cVectorkeysAssignment_6_2_0; }
		
		//VectorKey
		public RuleCall getVectorkeysVectorKeyParserRuleCall_6_2_0_0() { return cVectorkeysVectorKeyParserRuleCall_6_2_0_0; }
		
		//(',' vectorkeys+=VectorKey)*
		public Group getGroup_6_2_1() { return cGroup_6_2_1; }
		
		//','
		public Keyword getCommaKeyword_6_2_1_0() { return cCommaKeyword_6_2_1_0; }
		
		//vectorkeys+=VectorKey
		public Assignment getVectorkeysAssignment_6_2_1_1() { return cVectorkeysAssignment_6_2_1_1; }
		
		//VectorKey
		public RuleCall getVectorkeysVectorKeyParserRuleCall_6_2_1_1_0() { return cVectorkeysVectorKeyParserRuleCall_6_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_2_2() { return cRightCurlyBracketKeyword_6_2_2; }
		
		//('JoinViaLink' sourceReleationship=[logmodel::Relationship|QualifiedName])?
		public Group getGroup_7() { return cGroup_7; }
		
		//'JoinViaLink'
		public Keyword getJoinViaLinkKeyword_7_0() { return cJoinViaLinkKeyword_7_0; }
		
		//sourceReleationship=[logmodel::Relationship|QualifiedName]
		public Assignment getSourceReleationshipAssignment_7_1() { return cSourceReleationshipAssignment_7_1; }
		
		//[logmodel::Relationship|QualifiedName]
		public CrossReference getSourceReleationshipRelationshipCrossReference_7_1_0() { return cSourceReleationshipRelationshipCrossReference_7_1_0; }
		
		//QualifiedName
		public RuleCall getSourceReleationshipRelationshipQualifiedNameParserRuleCall_7_1_0_1() { return cSourceReleationshipRelationshipQualifiedNameParserRuleCall_7_1_0_1; }
		
		//('JoinComment' joinComment=EString)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'JoinComment'
		public Keyword getJoinCommentKeyword_8_0() { return cJoinCommentKeyword_8_0; }
		
		//joinComment=EString
		public Assignment getJoinCommentAssignment_8_1() { return cJoinCommentAssignment_8_1; }
		
		//EString
		public RuleCall getJoinCommentEStringParserRuleCall_8_1_0() { return cJoinCommentEStringParserRuleCall_8_1_0; }
		
		//('PrimaryJoinFields' '{' (parentJoinFields+=JoinField (',' parentJoinFields+=JoinField)*) '}')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'PrimaryJoinFields'
		public Keyword getPrimaryJoinFieldsKeyword_9_0() { return cPrimaryJoinFieldsKeyword_9_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }
		
		//(parentJoinFields+=JoinField (',' parentJoinFields+=JoinField)*)
		public Group getGroup_9_2() { return cGroup_9_2; }
		
		//parentJoinFields+=JoinField
		public Assignment getParentJoinFieldsAssignment_9_2_0() { return cParentJoinFieldsAssignment_9_2_0; }
		
		//JoinField
		public RuleCall getParentJoinFieldsJoinFieldParserRuleCall_9_2_0_0() { return cParentJoinFieldsJoinFieldParserRuleCall_9_2_0_0; }
		
		//(',' parentJoinFields+=JoinField)*
		public Group getGroup_9_2_1() { return cGroup_9_2_1; }
		
		//','
		public Keyword getCommaKeyword_9_2_1_0() { return cCommaKeyword_9_2_1_0; }
		
		//parentJoinFields+=JoinField
		public Assignment getParentJoinFieldsAssignment_9_2_1_1() { return cParentJoinFieldsAssignment_9_2_1_1; }
		
		//JoinField
		public RuleCall getParentJoinFieldsJoinFieldParserRuleCall_9_2_1_1_0() { return cParentJoinFieldsJoinFieldParserRuleCall_9_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }
		
		//('SecondaryJoinField' '{' (childJoinField+=JoinField (',' childJoinField+=JoinField)*) '}')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'SecondaryJoinField'
		public Keyword getSecondaryJoinFieldKeyword_10_0() { return cSecondaryJoinFieldKeyword_10_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }
		
		//(childJoinField+=JoinField (',' childJoinField+=JoinField)*)
		public Group getGroup_10_2() { return cGroup_10_2; }
		
		//childJoinField+=JoinField
		public Assignment getChildJoinFieldAssignment_10_2_0() { return cChildJoinFieldAssignment_10_2_0; }
		
		//JoinField
		public RuleCall getChildJoinFieldJoinFieldParserRuleCall_10_2_0_0() { return cChildJoinFieldJoinFieldParserRuleCall_10_2_0_0; }
		
		//(',' childJoinField+=JoinField)*
		public Group getGroup_10_2_1() { return cGroup_10_2_1; }
		
		//','
		public Keyword getCommaKeyword_10_2_1_0() { return cCommaKeyword_10_2_1_0; }
		
		//childJoinField+=JoinField
		public Assignment getChildJoinFieldAssignment_10_2_1_1() { return cChildJoinFieldAssignment_10_2_1_1; }
		
		//JoinField
		public RuleCall getChildJoinFieldJoinFieldParserRuleCall_10_2_1_1_0() { return cChildJoinFieldJoinFieldParserRuleCall_10_2_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10_3() { return cRightCurlyBracketKeyword_10_3; }
		
		//('JoinType' JoinType=JoinType)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'JoinType'
		public Keyword getJoinTypeKeyword_11_0() { return cJoinTypeKeyword_11_0; }
		
		//JoinType=JoinType
		public Assignment getJoinTypeAssignment_11_1() { return cJoinTypeAssignment_11_1; }
		
		//JoinType
		public RuleCall getJoinTypeJoinTypeEnumRuleCall_11_1_0() { return cJoinTypeJoinTypeEnumRuleCall_11_1_0; }
		
		//('[' childSources+=Source ']')*
		public Group getGroup_12() { return cGroup_12; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_12_0() { return cLeftSquareBracketKeyword_12_0; }
		
		//childSources+=Source
		public Assignment getChildSourcesAssignment_12_1() { return cChildSourcesAssignment_12_1; }
		
		//Source
		public RuleCall getChildSourcesSourceParserRuleCall_12_1_0() { return cChildSourcesSourceParserRuleCall_12_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_12_2() { return cRightSquareBracketKeyword_12_2; }
	}
	public class VectorKeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.VectorKey");
		private final Assignment cVkFieldAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cVkFieldFieldCrossReference_0 = (CrossReference)cVkFieldAssignment.eContents().get(0);
		private final RuleCall cVkFieldFieldQualifiedNameParserRuleCall_0_1 = (RuleCall)cVkFieldFieldCrossReference_0.eContents().get(1);
		
		//VectorKey specmodel::VectorKey:
		//	vkField=[logmodel::Field|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//vkField=[logmodel::Field|QualifiedName]
		public Assignment getVkFieldAssignment() { return cVkFieldAssignment; }
		
		//[logmodel::Field|QualifiedName]
		public CrossReference getVkFieldFieldCrossReference_0() { return cVkFieldFieldCrossReference_0; }
		
		//QualifiedName
		public RuleCall getVkFieldFieldQualifiedNameParserRuleCall_0_1() { return cVkFieldFieldQualifiedNameParserRuleCall_0_1; }
	}
	public class JoinFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.JoinField");
		private final Assignment cFieldAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cFieldFieldCrossReference_0 = (CrossReference)cFieldAssignment.eContents().get(0);
		private final RuleCall cFieldFieldQualifiedNameParserRuleCall_0_1 = (RuleCall)cFieldFieldCrossReference_0.eContents().get(1);
		
		//JoinField specmodel::JoinField:
		//	field=[logmodel::Field|QualifiedName];
		@Override public ParserRule getRule() { return rule; }
		
		//field=[logmodel::Field|QualifiedName]
		public Assignment getFieldAssignment() { return cFieldAssignment; }
		
		//[logmodel::Field|QualifiedName]
		public CrossReference getFieldFieldCrossReference_0() { return cFieldFieldCrossReference_0; }
		
		//QualifiedName
		public RuleCall getFieldFieldQualifiedNameParserRuleCall_0_1() { return cFieldFieldQualifiedNameParserRuleCall_0_1; }
	}
	
	public class FieldTypesElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.FieldTypes");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cStringStringKeyword_0_0 = (Keyword)cStringEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cIntEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cIntIntKeyword_1_0 = (Keyword)cIntEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDecimalEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDecimalDecimalKeyword_2_0 = (Keyword)cDecimalEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDateDateKeyword_3_0 = (Keyword)cDateEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTimeStampEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTimeStampTimeStampKeyword_4_0 = (Keyword)cTimeStampEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHKEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHKHKKeyword_5_0 = (Keyword)cHKEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cTrueFalseEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cTrueFalseTrueFalseKeyword_6_0 = (Keyword)cTrueFalseEnumLiteralDeclaration_6.eContents().get(0);
		
		//enum FieldTypes returns type_enum::FieldTypes:
		//	String | Int | Decimal | Date | TimeStamp | HK | TrueFalse;
		public EnumRule getRule() { return rule; }
		
		//String | Int | Decimal | Date | TimeStamp | HK | TrueFalse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//String
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_0() { return cStringEnumLiteralDeclaration_0; }
		
		//'String'
		public Keyword getStringStringKeyword_0_0() { return cStringStringKeyword_0_0; }
		
		//Int
		public EnumLiteralDeclaration getIntEnumLiteralDeclaration_1() { return cIntEnumLiteralDeclaration_1; }
		
		//'Int'
		public Keyword getIntIntKeyword_1_0() { return cIntIntKeyword_1_0; }
		
		//Decimal
		public EnumLiteralDeclaration getDecimalEnumLiteralDeclaration_2() { return cDecimalEnumLiteralDeclaration_2; }
		
		//'Decimal'
		public Keyword getDecimalDecimalKeyword_2_0() { return cDecimalDecimalKeyword_2_0; }
		
		//Date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_3() { return cDateEnumLiteralDeclaration_3; }
		
		//'Date'
		public Keyword getDateDateKeyword_3_0() { return cDateDateKeyword_3_0; }
		
		//TimeStamp
		public EnumLiteralDeclaration getTimeStampEnumLiteralDeclaration_4() { return cTimeStampEnumLiteralDeclaration_4; }
		
		//'TimeStamp'
		public Keyword getTimeStampTimeStampKeyword_4_0() { return cTimeStampTimeStampKeyword_4_0; }
		
		//HK
		public EnumLiteralDeclaration getHKEnumLiteralDeclaration_5() { return cHKEnumLiteralDeclaration_5; }
		
		//'HK'
		public Keyword getHKHKKeyword_5_0() { return cHKHKKeyword_5_0; }
		
		//TrueFalse
		public EnumLiteralDeclaration getTrueFalseEnumLiteralDeclaration_6() { return cTrueFalseEnumLiteralDeclaration_6; }
		
		//'TrueFalse'
		public Keyword getTrueFalseTrueFalseKeyword_6_0() { return cTrueFalseTrueFalseKeyword_6_0; }
	}
	public class RuleTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.RuleType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAggregationEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAggregationAggregationKeyword_0_0 = (Keyword)cAggregationEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDedupEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDedupDedupKeyword_1_0 = (Keyword)cDedupEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFilterEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFilterFilterKeyword_2_0 = (Keyword)cFilterEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cMultiFireEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cMultiFireMultiFireKeyword_3_0 = (Keyword)cMultiFireEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cSingleFireEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cSingleFireSingleFireKeyword_4_0 = (Keyword)cSingleFireEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum RuleType returns specmodel::RuleType:
		//	Aggregation | Dedup | Filter | MultiFire | SingleFire;
		public EnumRule getRule() { return rule; }
		
		//Aggregation | Dedup | Filter | MultiFire | SingleFire
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Aggregation
		public EnumLiteralDeclaration getAggregationEnumLiteralDeclaration_0() { return cAggregationEnumLiteralDeclaration_0; }
		
		//'Aggregation'
		public Keyword getAggregationAggregationKeyword_0_0() { return cAggregationAggregationKeyword_0_0; }
		
		//Dedup
		public EnumLiteralDeclaration getDedupEnumLiteralDeclaration_1() { return cDedupEnumLiteralDeclaration_1; }
		
		//'Dedup'
		public Keyword getDedupDedupKeyword_1_0() { return cDedupDedupKeyword_1_0; }
		
		//Filter
		public EnumLiteralDeclaration getFilterEnumLiteralDeclaration_2() { return cFilterEnumLiteralDeclaration_2; }
		
		//'Filter'
		public Keyword getFilterFilterKeyword_2_0() { return cFilterFilterKeyword_2_0; }
		
		//MultiFire
		public EnumLiteralDeclaration getMultiFireEnumLiteralDeclaration_3() { return cMultiFireEnumLiteralDeclaration_3; }
		
		//'MultiFire'
		public Keyword getMultiFireMultiFireKeyword_3_0() { return cMultiFireMultiFireKeyword_3_0; }
		
		//SingleFire
		public EnumLiteralDeclaration getSingleFireEnumLiteralDeclaration_4() { return cSingleFireEnumLiteralDeclaration_4; }
		
		//'SingleFire'
		public Keyword getSingleFireSingleFireKeyword_4_0() { return cSingleFireSingleFireKeyword_4_0; }
	}
	public class JoinTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.etl_modeling.specdsl.SpecDsl.JoinType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLEFTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLEFTLEFTKeyword_0_0 = (Keyword)cLEFTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cRIGHTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cRIGHTRIGHTKeyword_1_0 = (Keyword)cRIGHTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cINNEREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cINNERINNERKeyword_2_0 = (Keyword)cINNEREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFULL_OUTEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFULL_OUTERFULL_OUTERKeyword_3_0 = (Keyword)cFULL_OUTEREnumLiteralDeclaration_3.eContents().get(0);
		
		//enum JoinType returns type_enum::JoinTypes:
		//	LEFT | RIGHT | INNER | FULL_OUTER;
		public EnumRule getRule() { return rule; }
		
		//LEFT | RIGHT | INNER | FULL_OUTER
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LEFT
		public EnumLiteralDeclaration getLEFTEnumLiteralDeclaration_0() { return cLEFTEnumLiteralDeclaration_0; }
		
		//'LEFT'
		public Keyword getLEFTLEFTKeyword_0_0() { return cLEFTLEFTKeyword_0_0; }
		
		//RIGHT
		public EnumLiteralDeclaration getRIGHTEnumLiteralDeclaration_1() { return cRIGHTEnumLiteralDeclaration_1; }
		
		//'RIGHT'
		public Keyword getRIGHTRIGHTKeyword_1_0() { return cRIGHTRIGHTKeyword_1_0; }
		
		//INNER
		public EnumLiteralDeclaration getINNEREnumLiteralDeclaration_2() { return cINNEREnumLiteralDeclaration_2; }
		
		//'INNER'
		public Keyword getINNERINNERKeyword_2_0() { return cINNERINNERKeyword_2_0; }
		
		//FULL_OUTER
		public EnumLiteralDeclaration getFULL_OUTEREnumLiteralDeclaration_3() { return cFULL_OUTEREnumLiteralDeclaration_3; }
		
		//'FULL_OUTER'
		public Keyword getFULL_OUTERFULL_OUTERKeyword_3_0() { return cFULL_OUTERFULL_OUTERKeyword_3_0; }
	}
	
	private final SpecPackageElements pSpecPackage;
	private final SpecificationElements pSpecification;
	private final EStringElements pEString;
	private final QualifiedNameElements pQualifiedName;
	private final EBooleanElements pEBoolean;
	private final FieldTypesElements eFieldTypes;
	private final RuleTypeElements eRuleType;
	private final JoinTypeElements eJoinType;
	private final BusinessRuleElements pBusinessRule;
	private final PrimarySourceElements pPrimarySource;
	private final SourceElements pSource;
	private final VectorKeyElements pVectorKey;
	private final JoinFieldElements pJoinField;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SpecDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pSpecPackage = new SpecPackageElements();
		this.pSpecification = new SpecificationElements();
		this.pEString = new EStringElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pEBoolean = new EBooleanElements();
		this.eFieldTypes = new FieldTypesElements();
		this.eRuleType = new RuleTypeElements();
		this.eJoinType = new JoinTypeElements();
		this.pBusinessRule = new BusinessRuleElements();
		this.pPrimarySource = new PrimarySourceElements();
		this.pSource = new SourceElements();
		this.pVectorKey = new VectorKeyElements();
		this.pJoinField = new JoinFieldElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.etl_modeling.specdsl.SpecDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//SpecPackage specmodel::SpecPackage:
	//	{specmodel::SpecPackage}
	//	'SpecPackage' name=EString
	//	specifications+=Specification*;
	public SpecPackageElements getSpecPackageAccess() {
		return pSpecPackage;
	}
	
	public ParserRule getSpecPackageRule() {
		return getSpecPackageAccess().getRule();
	}
	
	//Specification specmodel::Specification:
	//	'Specification' name=EString '{'
	//	'target' businessrules+=BusinessRule
	//	'}';
	public SpecificationElements getSpecificationAccess() {
		return pSpecification;
	}
	
	public ParserRule getSpecificationRule() {
		return getSpecificationAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//enum FieldTypes returns type_enum::FieldTypes:
	//	String | Int | Decimal | Date | TimeStamp | HK | TrueFalse;
	public FieldTypesElements getFieldTypesAccess() {
		return eFieldTypes;
	}
	
	public EnumRule getFieldTypesRule() {
		return getFieldTypesAccess().getRule();
	}
	
	//enum RuleType returns specmodel::RuleType:
	//	Aggregation | Dedup | Filter | MultiFire | SingleFire;
	public RuleTypeElements getRuleTypeAccess() {
		return eRuleType;
	}
	
	public EnumRule getRuleTypeRule() {
		return getRuleTypeAccess().getRule();
	}
	
	//enum JoinType returns type_enum::JoinTypes:
	//	LEFT | RIGHT | INNER | FULL_OUTER;
	public JoinTypeElements getJoinTypeAccess() {
		return eJoinType;
	}
	
	public EnumRule getJoinTypeRule() {
		return getJoinTypeAccess().getRule();
	}
	
	//BusinessRule specmodel::BusinessRule:
	//	{specmodel::BusinessRule}
	//	'RuleType' RuleType=RuleType
	//	'BusinessRule' name=EString ('targetEntity' targetEntity=[logmodel::Entity|QualifiedName] | 'targetRelationship'
	//	targetRelationship=[logmodel::Relationship|QualifiedName] | 'targetIncludeSatelit'
	//	targetInclude=[logmodel::Include|QualifiedName]) sources+=PrimarySource*;
	public BusinessRuleElements getBusinessRuleAccess() {
		return pBusinessRule;
	}
	
	public ParserRule getBusinessRuleRule() {
		return getBusinessRuleAccess().getRule();
	}
	
	///*###################################################################################################### */
	//PrimarySource specmodel::Source:
	//	'PrimarySource' sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)? ('childSources' '['
	//	(childSources+=Source childSources+=Source*)
	//	']')*;
	public PrimarySourceElements getPrimarySourceAccess() {
		return pPrimarySource;
	}
	
	public ParserRule getPrimarySourceRule() {
		return getPrimarySourceAccess().getRule();
	}
	
	//Source specmodel::Source:
	//	{specmodel::Source} sourceEntity=[logmodel::Entity|QualifiedName] ('alias' alias=EString)?
	//	isMandatory?='mandatory'?
	//	isMultiplying?='isMultiplying'?
	//	isVector?='Vector'? ('VectoryKeys' '{' (vectorkeys+=VectorKey (',' vectorkeys+=VectorKey)* '}'))? ('JoinViaLink'
	//	sourceReleationship=[logmodel::Relationship|QualifiedName])? ('JoinComment' joinComment=EString)?
	//	('PrimaryJoinFields' '{' (parentJoinFields+=JoinField (',' parentJoinFields+=JoinField)*) '}')? ('SecondaryJoinField'
	//	'{' (childJoinField+=JoinField (',' childJoinField+=JoinField)*) '}')? ('JoinType' JoinType=JoinType)? ('['
	//	childSources+=Source
	//	']')*;
	public SourceElements getSourceAccess() {
		return pSource;
	}
	
	public ParserRule getSourceRule() {
		return getSourceAccess().getRule();
	}
	
	//VectorKey specmodel::VectorKey:
	//	vkField=[logmodel::Field|QualifiedName];
	public VectorKeyElements getVectorKeyAccess() {
		return pVectorKey;
	}
	
	public ParserRule getVectorKeyRule() {
		return getVectorKeyAccess().getRule();
	}
	
	//JoinField specmodel::JoinField:
	//	field=[logmodel::Field|QualifiedName];
	public JoinFieldElements getJoinFieldAccess() {
		return pJoinField;
	}
	
	public ParserRule getJoinFieldRule() {
		return getJoinFieldAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
