/*
 * generated by Xtext 2.22.0
 */
grammar InternalETLDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.etl_modeling.etldsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.etl_modeling.etldsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.etl_modeling.etldsl.services.ETLDslGrammarAccess;

}

@parser::members {

 	private ETLDslGrammarAccess grammarAccess;

    public InternalETLDslParser(TokenStream input, ETLDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "logpackage";
   	}

   	@Override
   	protected ETLDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulelogpackage
entryRulelogpackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLogpackageRule()); }
	iv_rulelogpackage=rulelogpackage
	{ $current=$iv_rulelogpackage.current; }
	EOF;

// Rule logpackage
rulelogpackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLogpackageAccess().getLogpackageAction_0(),
					$current);
			}
		)
		otherlv_1='logpackage'
		{
			newLeafNode(otherlv_1, grammarAccess.getLogpackageAccess().getLogpackageKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLogpackageAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLogpackageRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.etl_modeling.etldsl.ETLDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='LAYER'
			{
				newLeafNode(otherlv_3, grammarAccess.getLogpackageAccess().getLAYERKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogpackageAccess().getLAYEREStringParserRuleCall_3_1_0());
					}
					lv_LAYER_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogpackageRule());
						}
						set(
							$current,
							"LAYER",
							lv_LAYER_4_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='LAYER_TYPE'
			{
				newLeafNode(otherlv_5, grammarAccess.getLogpackageAccess().getLAYER_TYPEKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogpackageAccess().getLAYER_TYPELAYERTYPEEnumRuleCall_4_1_0());
					}
					lv_LAYER_TYPE_6_0=ruleLAYERTYPE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogpackageRule());
						}
						set(
							$current,
							"LAYER_TYPE",
							lv_LAYER_TYPE_6_0,
							"org.etl_modeling.etldsl.ETLDsl.LAYERTYPE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='HISTORISATION'
			{
				newLeafNode(otherlv_7, grammarAccess.getLogpackageAccess().getHISTORISATIONKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogpackageAccess().getHISTORISATIONHISTORISATIONTYPEEnumRuleCall_5_1_0());
					}
					lv_HISTORISATION_8_0=ruleHISTORISATIONTYPE
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogpackageRule());
						}
						set(
							$current,
							"HISTORISATION",
							lv_HISTORISATION_8_0,
							"org.etl_modeling.etldsl.ETLDsl.HISTORISATIONTYPE");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='REPRESENTATION'
			{
				newLeafNode(otherlv_9, grammarAccess.getLogpackageAccess().getREPRESENTATIONKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLogpackageAccess().getREPRESENTATIONREPRESENTATIONSEnumRuleCall_6_1_0());
					}
					lv_REPRESENTATION_10_0=ruleREPRESENTATIONS
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLogpackageRule());
						}
						set(
							$current,
							"REPRESENTATION",
							lv_REPRESENTATION_10_0,
							"org.etl_modeling.etldsl.ETLDsl.REPRESENTATIONS");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getLogpackageAccess().getCommonmappingCommonMappingParserRuleCall_7_0_0_0());
						}
						lv_commonmapping_11_0=ruleCommonMapping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogpackageRule());
							}
							add(
								$current,
								"commonmapping",
								lv_commonmapping_11_0,
								"org.etl_modeling.etldsl.ETLDsl.CommonMapping");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getLogpackageAccess().getEntityEntityParserRuleCall_7_0_1_0());
						}
						lv_entity_12_0=ruleEntity
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLogpackageRule());
							}
							add(
								$current,
								"entity",
								lv_entity_12_0,
								"org.etl_modeling.etldsl.ETLDsl.Entity");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getLogpackageAccess().getCommaKeyword_7_1_0());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getLogpackageAccess().getCommonmappingCommonMappingParserRuleCall_7_1_1_0_0());
							}
							lv_commonmapping_14_0=ruleCommonMapping
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLogpackageRule());
								}
								add(
									$current,
									"commonmapping",
									lv_commonmapping_14_0,
									"org.etl_modeling.etldsl.ETLDsl.CommonMapping");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					(
						(
							{
								newCompositeNode(grammarAccess.getLogpackageAccess().getEntityEntityParserRuleCall_7_1_1_1_0());
							}
							lv_entity_15_0=ruleEntity
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getLogpackageRule());
								}
								add(
									$current,
									"entity",
									lv_entity_15_0,
									"org.etl_modeling.etldsl.ETLDsl.Entity");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCommonMapping
entryRuleCommonMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommonMappingRule()); }
	iv_ruleCommonMapping=ruleCommonMapping
	{ $current=$iv_ruleCommonMapping.current; }
	EOF;

// Rule CommonMapping
ruleCommonMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='commonmapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getCommonMappingAccess().getCommonmappingKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCommonMappingAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCommonMappingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCommonMappingAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='InputField'
			{
				newLeafNode(otherlv_3, grammarAccess.getCommonMappingAccess().getInputFieldKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getCommonMappingAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommonMappingAccess().getCommonmappinginputfieldsFieldParserRuleCall_3_2_0());
					}
					lv_commonmappinginputfields_5_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommonMappingRule());
						}
						add(
							$current,
							"commonmappinginputfields",
							lv_commonmappinginputfields_5_0,
							"org.etl_modeling.etldsl.ETLDsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getCommonMappingAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommonMappingAccess().getCommonmappinginputfieldsFieldParserRuleCall_3_3_1_0());
						}
						lv_commonmappinginputfields_7_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommonMappingRule());
							}
							add(
								$current,
								"commonmappinginputfields",
								lv_commonmappinginputfields_7_0,
								"org.etl_modeling.etldsl.ETLDsl.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getCommonMappingAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='OutputField'
			{
				newLeafNode(otherlv_9, grammarAccess.getCommonMappingAccess().getOutputFieldKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getCommonMappingAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCommonMappingAccess().getCommonmappingoutputfieldsFieldParserRuleCall_4_2_0());
					}
					lv_commonmappingoutputfields_11_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCommonMappingRule());
						}
						add(
							$current,
							"commonmappingoutputfields",
							lv_commonmappingoutputfields_11_0,
							"org.etl_modeling.etldsl.ETLDsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getCommonMappingAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCommonMappingAccess().getCommonmappingoutputfieldsFieldParserRuleCall_4_3_1_0());
						}
						lv_commonmappingoutputfields_13_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCommonMappingRule());
							}
							add(
								$current,
								"commonmappingoutputfields",
								lv_commonmappingoutputfields_13_0,
								"org.etl_modeling.etldsl.ETLDsl.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getCommonMappingAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getCommonMappingAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntityAccess().getEntityAction_0(),
					$current);
			}
		)
		otherlv_1='Entity'
		{
			newLeafNode(otherlv_1, grammarAccess.getEntityAccess().getEntityKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='metadata'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getMetadataKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3_1());
			}
			otherlv_5='FileName'
			{
				newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getFileNameKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getFilenameEStringParserRuleCall_3_3_0());
					}
					lv_filename_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						set(
							$current,
							"filename",
							lv_filename_6_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_7='ColumnDelimiter'
			{
				newLeafNode(otherlv_7, grammarAccess.getEntityAccess().getColumnDelimiterKeyword_3_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getDelimiterEStringParserRuleCall_3_5_0());
					}
					lv_delimiter_8_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						set(
							$current,
							"delimiter",
							lv_delimiter_8_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_9='lineDelimiter'
			{
				newLeafNode(otherlv_9, grammarAccess.getEntityAccess().getLineDelimiterKeyword_3_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getLineendEStringParserRuleCall_3_7_0());
					}
					lv_lineend_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						set(
							$current,
							"lineend",
							lv_lineend_10_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='}'
			{
				newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_3_8());
			}
		)?
		otherlv_12='{'
		{
			newLeafNode(otherlv_12, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_13='entityFields'
			{
				newLeafNode(otherlv_13, grammarAccess.getEntityAccess().getEntityFieldsKeyword_5_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getEntityFieldFieldParserRuleCall_5_2_0());
					}
					lv_entityField_15_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"entityField",
							lv_entityField_15_0,
							"org.etl_modeling.etldsl.ETLDsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getEntityFieldFieldParserRuleCall_5_3_0());
					}
					lv_entityField_16_0=ruleField
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"entityField",
							lv_entityField_16_0,
							"org.etl_modeling.etldsl.ETLDsl.Field");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			otherlv_17='}'
			{
				newLeafNode(otherlv_17, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_18='Includes'
			{
				newLeafNode(otherlv_18, grammarAccess.getEntityAccess().getIncludesKeyword_6_0());
			}
			otherlv_19='{'
			{
				newLeafNode(otherlv_19, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getIncludeIncludeParserRuleCall_6_2_0());
					}
					lv_include_20_0=ruleInclude
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"include",
							lv_include_20_0,
							"org.etl_modeling.etldsl.ETLDsl.Include");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_21=','
				{
					newLeafNode(otherlv_21, grammarAccess.getEntityAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getIncludeIncludeParserRuleCall_6_3_1_0());
						}
						lv_include_22_0=ruleInclude
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"include",
								lv_include_22_0,
								"org.etl_modeling.etldsl.ETLDsl.Include");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_23='}'
			{
				newLeafNode(otherlv_23, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_24='Relationships'
			{
				newLeafNode(otherlv_24, grammarAccess.getEntityAccess().getRelationshipsKeyword_7_0());
			}
			otherlv_25='{'
			{
				newLeafNode(otherlv_25, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getRelationshipsRelationshipParserRuleCall_7_2_0());
					}
					lv_relationships_26_0=ruleRelationship
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"relationships",
							lv_relationships_26_0,
							"org.etl_modeling.etldsl.ETLDsl.Relationship");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_27=','
				{
					newLeafNode(otherlv_27, grammarAccess.getEntityAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getRelationshipsRelationshipParserRuleCall_7_3_1_0());
						}
						lv_relationships_28_0=ruleRelationship
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"relationships",
								lv_relationships_28_0,
								"org.etl_modeling.etldsl.ETLDsl.Relationship");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_29='}'
			{
				newLeafNode(otherlv_29, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		otherlv_30='}'
		{
			newLeafNode(otherlv_30, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFieldAccess().getFieldAction_0(),
					$current);
			}
		)
		otherlv_1='Field'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldAccess().getFieldKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getFieldAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='['
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldAccess().getLeftSquareBracketKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getFieldAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getTypeFtEnumRuleCall_4_1_0());
					}
					lv_type_5_0=ruleft
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.etl_modeling.etldsl.ETLDsl.ft");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			otherlv_6='length'
			{
				newLeafNode(otherlv_6, grammarAccess.getFieldAccess().getLengthKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getLengthEIntParserRuleCall_5_1_0());
					}
					lv_length_7_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"length",
							lv_length_7_0,
							"org.etl_modeling.etldsl.ETLDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='precision'
			{
				newLeafNode(otherlv_8, grammarAccess.getFieldAccess().getPrecisionKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getPrecisionEIntParserRuleCall_6_1_0());
					}
					lv_precision_9_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"precision",
							lv_precision_9_0,
							"org.etl_modeling.etldsl.ETLDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_10='scale'
			{
				newLeafNode(otherlv_10, grammarAccess.getFieldAccess().getScaleKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getScaleEIntParserRuleCall_7_1_0());
					}
					lv_scale_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"scale",
							lv_scale_11_0,
							"org.etl_modeling.etldsl.ETLDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='original_name'
			{
				newLeafNode(otherlv_12, grammarAccess.getFieldAccess().getOriginal_nameKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getOriginal_nameEStringParserRuleCall_8_1_0());
					}
					lv_original_name_13_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"original_name",
							lv_original_name_13_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='short_describtion'
			{
				newLeafNode(otherlv_14, grammarAccess.getFieldAccess().getShort_describtionKeyword_9_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getShort_describtionEStringParserRuleCall_9_1_0());
					}
					lv_short_describtion_15_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"short_describtion",
							lv_short_describtion_15_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_16='dateFormat'
			{
				newLeafNode(otherlv_16, grammarAccess.getFieldAccess().getDateFormatKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getDateFormatEStringParserRuleCall_10_1_0());
					}
					lv_dateFormat_17_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"dateFormat",
							lv_dateFormat_17_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_18='NullIndicator'
			{
				newLeafNode(otherlv_18, grammarAccess.getFieldAccess().getNullIndicatorKeyword_11_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccess().getNullIndicatorEStringParserRuleCall_11_1_0());
					}
					lv_NullIndicator_19_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldRule());
						}
						set(
							$current,
							"NullIndicator",
							lv_NullIndicator_19_0,
							"org.etl_modeling.etldsl.ETLDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				lv_allowExponent_20_0='allowExponent'
				{
					newLeafNode(lv_allowExponent_20_0, grammarAccess.getFieldAccess().getAllowExponentAllowExponentKeyword_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "allowExponent", lv_allowExponent_20_0 != null, "allowExponent");
				}
			)
		)?
		(
			(
				lv_hasImplicitComma_21_0='hasImplicitComma'
				{
					newLeafNode(lv_hasImplicitComma_21_0, grammarAccess.getFieldAccess().getHasImplicitCommaHasImplicitCommaKeyword_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "hasImplicitComma", lv_hasImplicitComma_21_0 != null, "hasImplicitComma");
				}
			)
		)?
		(
			(
				lv_interfaceOnly_22_0='interfaceOnly'
				{
					newLeafNode(lv_interfaceOnly_22_0, grammarAccess.getFieldAccess().getInterfaceOnlyInterfaceOnlyKeyword_14_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "interfaceOnly", lv_interfaceOnly_22_0 != null, "interfaceOnly");
				}
			)
		)?
		(
			(
				lv_tableOnly_23_0='tableOnly'
				{
					newLeafNode(lv_tableOnly_23_0, grammarAccess.getFieldAccess().getTableOnlyTableOnlyKeyword_15_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "tableOnly", lv_tableOnly_23_0 != null, "tableOnly");
				}
			)
		)?
		(
			(
				lv_isFastChanging_24_0='isFastChanging'
				{
					newLeafNode(lv_isFastChanging_24_0, grammarAccess.getFieldAccess().getIsFastChangingIsFastChangingKeyword_16_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "isFastChanging", lv_isFastChanging_24_0 != null, "isFastChanging");
				}
			)
		)?
		(
			(
				lv_isBusinessKey_25_0='BusinessKey'
				{
					newLeafNode(lv_isBusinessKey_25_0, grammarAccess.getFieldAccess().getIsBusinessKeyBusinessKeyKeyword_17_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldRule());
					}
					setWithLastConsumed($current, "isBusinessKey", lv_isBusinessKey_25_0 != null, "BusinessKey");
				}
			)
		)?
		otherlv_26=']'
		{
			newLeafNode(otherlv_26, grammarAccess.getFieldAccess().getRightSquareBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleInclude
entryRuleInclude returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIncludeRule()); }
	iv_ruleInclude=ruleInclude
	{ $current=$iv_ruleInclude.current; }
	EOF;

// Rule Include
ruleInclude returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Include'
		{
			newLeafNode(otherlv_0, grammarAccess.getIncludeAccess().getIncludeKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIncludeAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIncludeRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.etl_modeling.etldsl.ETLDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='{'
			{
				newLeafNode(otherlv_2, grammarAccess.getIncludeAccess().getLeftCurlyBracketKeyword_2_0());
			}
			(
				otherlv_3='IncludeFields'
				{
					newLeafNode(otherlv_3, grammarAccess.getIncludeAccess().getIncludeFieldsKeyword_2_1_0());
				}
				otherlv_4='{'
				{
					newLeafNode(otherlv_4, grammarAccess.getIncludeAccess().getLeftCurlyBracketKeyword_2_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIncludeAccess().getIncludeFieldsFieldParserRuleCall_2_1_2_0());
						}
						lv_includeFields_5_0=ruleField
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIncludeRule());
							}
							add(
								$current,
								"includeFields",
								lv_includeFields_5_0,
								"org.etl_modeling.etldsl.ETLDsl.Field");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_6=','
					{
						newLeafNode(otherlv_6, grammarAccess.getIncludeAccess().getCommaKeyword_2_1_3_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getIncludeAccess().getIncludeFieldsFieldParserRuleCall_2_1_3_1_0());
							}
							lv_includeFields_7_0=ruleField
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getIncludeRule());
								}
								add(
									$current,
									"includeFields",
									lv_includeFields_7_0,
									"org.etl_modeling.etldsl.ETLDsl.Field");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getIncludeAccess().getRightCurlyBracketKeyword_2_1_4());
				}
			)?
			(
				otherlv_9='IdentifyingFields:{'
				{
					newLeafNode(otherlv_9, grammarAccess.getIncludeAccess().getIdentifyingFieldsKeyword_2_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIncludeRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getIncludeAccess().getIdentifyingfieldsFieldCrossReference_2_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_11=','
					{
						newLeafNode(otherlv_11, grammarAccess.getIncludeAccess().getCommaKeyword_2_2_2_0());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getIncludeRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getIncludeAccess().getIdentifyingfieldsFieldCrossReference_2_2_2_1_0());
							}
							ruleQualifiedName
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getIncludeAccess().getRightCurlyBracketKeyword_2_2_3());
				}
			)?
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getIncludeAccess().getRightCurlyBracketKeyword_2_3());
			}
		)
	)
;

// Entry rule entryRuleRelationship
entryRuleRelationship returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationshipRule()); }
	iv_ruleRelationship=ruleRelationship
	{ $current=$iv_ruleRelationship.current; }
	EOF;

// Rule Relationship
ruleRelationship returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRelationshipAccess().getRelationshipAction_0(),
					$current);
			}
		)
		otherlv_1='Relationship'
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationshipAccess().getRelationshipKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationshipRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.etl_modeling.etldsl.ETLDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getRelationshipAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='ToEntity: '
		{
			newLeafNode(otherlv_4, grammarAccess.getRelationshipAccess().getToEntityKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationshipRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRelationshipAccess().getToEntityEntityCrossReference_5_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='DescribingFields:{'
			{
				newLeafNode(otherlv_6, grammarAccess.getRelationshipAccess().getDescribingFieldsKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationshipRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRelationshipAccess().getDescribingFieldsRelFieldCrossReference_6_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getRelationshipAccess().getCommaKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationshipRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRelationshipAccess().getDescribingFieldsRelFieldCrossReference_6_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		(
			otherlv_11='IdentifyingFields:{'
			{
				newLeafNode(otherlv_11, grammarAccess.getRelationshipAccess().getIdentifyingFieldsKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationshipRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRelationshipAccess().getIdentifiyingFieldsRelFieldCrossReference_7_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_13=','
				{
					newLeafNode(otherlv_13, grammarAccess.getRelationshipAccess().getCommaKeyword_7_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationshipRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRelationshipAccess().getIdentifiyingFieldsRelFieldCrossReference_7_2_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getRelationshipAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Rule ft
ruleft returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getFtAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getFtAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Date'
			{
				$current = grammarAccess.getFtAccess().getDateEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getFtAccess().getDateEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Decimal'
			{
				$current = grammarAccess.getFtAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getFtAccess().getDecimalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='HK'
			{
				$current = grammarAccess.getFtAccess().getHKEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getFtAccess().getHKEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Int'
			{
				$current = grammarAccess.getFtAccess().getIntEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getFtAccess().getIntEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='TimeStamp'
			{
				$current = grammarAccess.getFtAccess().getTimeStampEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getFtAccess().getTimeStampEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='TrueFalse'
			{
				$current = grammarAccess.getFtAccess().getTrueFalseEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getFtAccess().getTrueFalseEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule LAYERTYPE
ruleLAYERTYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='STAGE'
			{
				$current = grammarAccess.getLAYERTYPEAccess().getSTAGEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLAYERTYPEAccess().getSTAGEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='INTEGRATION'
			{
				$current = grammarAccess.getLAYERTYPEAccess().getINTEGRATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLAYERTYPEAccess().getINTEGRATIONEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='EXPORT'
			{
				$current = grammarAccess.getLAYERTYPEAccess().getEXPORTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getLAYERTYPEAccess().getEXPORTEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='REPORTING'
			{
				$current = grammarAccess.getLAYERTYPEAccess().getREPORTINGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getLAYERTYPEAccess().getREPORTINGEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='HARMONISATION'
			{
				$current = grammarAccess.getLAYERTYPEAccess().getHARMONISATIONEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getLAYERTYPEAccess().getHARMONISATIONEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule HISTORISATIONTYPE
ruleHISTORISATIONTYPE returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NONE'
			{
				$current = grammarAccess.getHISTORISATIONTYPEAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getHISTORISATIONTYPEAccess().getNONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DAY_PARTITIONED'
			{
				$current = grammarAccess.getHISTORISATIONTYPEAccess().getDAY_PARTITIONEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getHISTORISATIONTYPEAccess().getDAY_PARTITIONEDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='MONTH_PARTITIONED'
			{
				$current = grammarAccess.getHISTORISATIONTYPEAccess().getMONTH_PARTITIONEDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getHISTORISATIONTYPEAccess().getMONTH_PARTITIONEDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='BITEMPORAL'
			{
				$current = grammarAccess.getHISTORISATIONTYPEAccess().getBITEMPORALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getHISTORISATIONTYPEAccess().getBITEMPORALEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule REPRESENTATIONS
ruleREPRESENTATIONS returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='FLAT_TABLE'
			{
				$current = grammarAccess.getREPRESENTATIONSAccess().getFLAT_TABLEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getREPRESENTATIONSAccess().getFLAT_TABLEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='DATAVAULT'
			{
				$current = grammarAccess.getREPRESENTATIONSAccess().getDATAVAULTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getREPRESENTATIONSAccess().getDATAVAULTEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='ThirdNF'
			{
				$current = grammarAccess.getREPRESENTATIONSAccess().getThirdNFEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getREPRESENTATIONSAccess().getThirdNFEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='SNOWFLAKE'
			{
				$current = grammarAccess.getREPRESENTATIONSAccess().getSNOWFLAKEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getREPRESENTATIONSAccess().getSNOWFLAKEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='STAR'
			{
				$current = grammarAccess.getREPRESENTATIONSAccess().getSTAREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getREPRESENTATIONSAccess().getSTAREnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
